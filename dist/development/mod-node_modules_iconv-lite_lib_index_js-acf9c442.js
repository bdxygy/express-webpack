"use strict";exports.id="mod-node_modules_iconv-lite_lib_index_js-acf9c442",exports.ids=["mod-node_modules_iconv-lite_lib_index_js-acf9c442"],exports.modules={"./node_modules/iconv-lite/lib/index.js":(e,n,o)=>{var i=o("./node_modules/safer-buffer/safer.js").Buffer,c=o("./node_modules/iconv-lite/lib/bom-handling.js"),r=e.exports;r.encodings=null,r.defaultCharUnicode="ï¿½",r.defaultCharSingleByte="?",r.encode=function(e,n,o){e=""+(e||"");var c=r.getEncoder(n,o),d=c.write(e),t=c.end();return t&&t.length>0?i.concat([d,t]):d},r.decode=function(e,n,o){"string"==typeof e&&(r.skipDecodeWarning||(console.error("Iconv-lite warning: decode()-ing strings is deprecated. Refer to https://github.com/ashtuchkin/iconv-lite/wiki/Use-Buffers-when-decoding"),r.skipDecodeWarning=!0),e=i.from(""+(e||""),"binary"));var c=r.getDecoder(n,o),d=c.write(e),t=c.end();return t?d+t:d},r.encodingExists=function(e){try{return r.getCodec(e),!0}catch(e){return!1}},r.toEncoding=r.encode,r.fromEncoding=r.decode,r._codecDataCache={},r.getCodec=function(e){r.encodings||(r.encodings=o("./node_modules/iconv-lite/encodings/index.js"));for(var n=r._canonicalizeEncoding(e),i={};;){var c=r._codecDataCache[n];if(c)return c;var d=r.encodings[n];switch(typeof d){case"string":n=d;break;case"object":for(var t in d)i[t]=d[t];i.encodingName||(i.encodingName=n),n=d.type;break;case"function":return i.encodingName||(i.encodingName=n),c=new d(i,r),r._codecDataCache[i.encodingName]=c,c;default:throw new Error("Encoding not recognized: '"+e+"' (searched as: '"+n+"')")}}},r._canonicalizeEncoding=function(e){return(""+e).toLowerCase().replace(/:\d{4}$|[^0-9a-z]/g,"")},r.getEncoder=function(e,n){var o=r.getCodec(e),i=new o.encoder(n,o);return o.bomAware&&n&&n.addBOM&&(i=new c.PrependBOM(i,n)),i},r.getDecoder=function(e,n){var o=r.getCodec(e),i=new o.decoder(n,o);return!o.bomAware||n&&!1===n.stripBOM||(i=new c.StripBOM(i,n)),i};var d="undefined"!=typeof process&&process.versions&&process.versions.node;if(d){var t=d.split(".").map(Number);(t[0]>0||t[1]>=10)&&o("./node_modules/iconv-lite/lib/streams.js")(r),o("./node_modules/iconv-lite/lib/extend-node.js")(r)}}};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,