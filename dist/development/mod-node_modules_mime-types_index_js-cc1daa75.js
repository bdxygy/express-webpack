"use strict";exports.id="mod-node_modules_mime-types_index_js-cc1daa75",exports.ids=["mod-node_modules_mime-types_index_js-cc1daa75"],exports.modules={"./node_modules/mime-types/index.js":(e,t,n)=>{var r,s,o,i=n("./node_modules/mime-db/index.js"),a=n("path").extname,c=/^\s*([^;\s]*)(?:;|\s|$)/,u=/^text\//i;function f(e){if(!e||"string"!=typeof e)return!1;var t=c.exec(e),n=t&&i[t[1].toLowerCase()];return n&&n.charset?n.charset:!(!t||!u.test(t[1]))&&"UTF-8"}t.charset=f,t.charsets={lookup:f},t.contentType=function(e){if(!e||"string"!=typeof e)return!1;var n=-1===e.indexOf("/")?t.lookup(e):e;if(!n)return!1;if(-1===n.indexOf("charset")){var r=t.charset(n);r&&(n+="; charset="+r.toLowerCase())}return n},t.extension=function(e){if(!e||"string"!=typeof e)return!1;var n=c.exec(e),r=n&&t.extensions[n[1].toLowerCase()];if(!r||!r.length)return!1;return r[0]},t.extensions=Object.create(null),t.lookup=function(e){if(!e||"string"!=typeof e)return!1;var n=a("x."+e).toLowerCase().substr(1);if(!n)return!1;return t.types[n]||!1},t.types=Object.create(null),r=t.extensions,s=t.types,o=["nginx","apache",void 0,"iana"],Object.keys(i).forEach((function(e){var t=i[e],n=t.extensions;if(n&&n.length){r[e]=n;for(var a=0;a<n.length;a++){var c=n[a];if(s[c]){var u=o.indexOf(i[s[c]].source),f=o.indexOf(t.source);if("application/octet-stream"!==s[c]&&(u>f||u===f&&"application/"===s[c].substr(0,12)))continue}s[c]=e}}}))}};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9kLW5vZGVfbW9kdWxlc19taW1lLXR5cGVzX2luZGV4X2pzLWNjMWRhYTc1LmpzIiwibWFwcGluZ3MiOiJzTUFjQSxJQTJJdUJBLEVBQVlDLEVBRTdCQyxFQTdJRkMsRUFBSyxFQUFRLG1DQUNiQyxFQUFVLGtCQU9WQyxFQUFzQiwwQkFDdEJDLEVBQW1CLFdBeUJ2QixTQUFTQyxFQUFTQyxHQUNoQixJQUFLQSxHQUF3QixpQkFBVEEsRUFDbEIsT0FBTyxFQUlULElBQUlDLEVBQVFKLEVBQW9CSyxLQUFLRixHQUNqQ0csRUFBT0YsR0FBU04sRUFBR00sRUFBTSxHQUFHRyxlQUVoQyxPQUFJRCxHQUFRQSxFQUFLSixRQUNSSSxFQUFLSixXQUlWRSxJQUFTSCxFQUFpQk8sS0FBS0osRUFBTSxNQUNoQyxPQUlYLENBckNBSyxFQUFRUCxRQUFVQSxFQUNsQk8sRUFBUUMsU0FBVyxDQUFFQyxPQUFRVCxHQUM3Qk8sRUFBUUcsWUE0Q1IsU0FBc0JDLEdBRXBCLElBQUtBLEdBQXNCLGlCQUFSQSxFQUNqQixPQUFPLEVBR1QsSUFBSVAsR0FBNkIsSUFBdEJPLEVBQUlDLFFBQVEsS0FDbkJMLEVBQVFFLE9BQU9FLEdBQ2ZBLEVBRUosSUFBS1AsRUFDSCxPQUFPLEVBSVQsSUFBaUMsSUFBN0JBLEVBQUtRLFFBQVEsV0FBbUIsQ0FDbEMsSUFBSVosRUFBVU8sRUFBUVAsUUFBUUksR0FDMUJKLElBQVNJLEdBQVEsYUFBZUosRUFBUUssY0FDOUMsQ0FFQSxPQUFPRCxDQUNULEVBaEVBRyxFQUFRTSxVQXlFUixTQUFvQlosR0FDbEIsSUFBS0EsR0FBd0IsaUJBQVRBLEVBQ2xCLE9BQU8sRUFJVCxJQUFJQyxFQUFRSixFQUFvQkssS0FBS0YsR0FHakNhLEVBQU9aLEdBQVNLLEVBQVFkLFdBQVdTLEVBQU0sR0FBR0csZUFFaEQsSUFBS1MsSUFBU0EsRUFBS0MsT0FDakIsT0FBTyxFQUdULE9BQU9ELEVBQUssRUFDZCxFQXhGQVAsRUFBUWQsV0FBYXVCLE9BQU9DLE9BQU8sTUFDbkNWLEVBQVFFLE9BZ0dSLFNBQWlCUyxHQUNmLElBQUtBLEdBQXdCLGlCQUFUQSxFQUNsQixPQUFPLEVBSVQsSUFBSUwsRUFBWWhCLEVBQVEsS0FBT3FCLEdBQzVCYixjQUNBYyxPQUFPLEdBRVYsSUFBS04sRUFDSCxPQUFPLEVBR1QsT0FBT04sRUFBUWIsTUFBTW1CLEtBQWMsQ0FDckMsRUE5R0FOLEVBQVFiLE1BQVFzQixPQUFPQyxPQUFPLE1BcUhQeEIsRUFsSFZjLEVBQVFkLFdBa0hjQyxFQWxIRmEsRUFBUWIsTUFvSG5DQyxFQUFhLENBQUMsUUFBUyxjQUFVeUIsRUFBVyxRQUVoREosT0FBT0ssS0FBS3pCLEdBQUkwQixTQUFRLFNBQTBCckIsR0FDaEQsSUFBSUcsRUFBT1IsRUFBR0ssR0FDVmEsRUFBT1YsRUFBS1gsV0FFaEIsR0FBS3FCLEdBQVNBLEVBQUtDLE9BQW5CLENBS0F0QixFQUFXUSxHQUFRYSxFQUduQixJQUFLLElBQUlTLEVBQUksRUFBR0EsRUFBSVQsRUFBS0MsT0FBUVEsSUFBSyxDQUNwQyxJQUFJVixFQUFZQyxFQUFLUyxHQUVyQixHQUFJN0IsRUFBTW1CLEdBQVksQ0FDcEIsSUFBSVcsRUFBTzdCLEVBQVdpQixRQUFRaEIsRUFBR0YsRUFBTW1CLElBQVlZLFFBQy9DQyxFQUFLL0IsRUFBV2lCLFFBQVFSLEVBQUtxQixRQUVqQyxHQUF5Qiw2QkFBckIvQixFQUFNbUIsS0FDUFcsRUFBT0UsR0FBT0YsSUFBU0UsR0FBeUMsaUJBQW5DaEMsRUFBTW1CLEdBQVdNLE9BQU8sRUFBRyxLQUV6RCxRQUVKLENBR0F6QixFQUFNbUIsR0FBYVosQ0FDckIsQ0F0QkEsQ0F1QkYsRyIsInNvdXJjZXMiOlsid2VicGFjazovL0BiZHh5Z3kvZXhwcmVzcy13ZWJwYWNrLy4vbm9kZV9tb2R1bGVzL21pbWUtdHlwZXMvaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiLyohXG4gKiBtaW1lLXR5cGVzXG4gKiBDb3B5cmlnaHQoYykgMjAxNCBKb25hdGhhbiBPbmdcbiAqIENvcHlyaWdodChjKSAyMDE1IERvdWdsYXMgQ2hyaXN0b3BoZXIgV2lsc29uXG4gKiBNSVQgTGljZW5zZWRcbiAqL1xuXG4ndXNlIHN0cmljdCdcblxuLyoqXG4gKiBNb2R1bGUgZGVwZW5kZW5jaWVzLlxuICogQHByaXZhdGVcbiAqL1xuXG52YXIgZGIgPSByZXF1aXJlKCdtaW1lLWRiJylcbnZhciBleHRuYW1lID0gcmVxdWlyZSgncGF0aCcpLmV4dG5hbWVcblxuLyoqXG4gKiBNb2R1bGUgdmFyaWFibGVzLlxuICogQHByaXZhdGVcbiAqL1xuXG52YXIgRVhUUkFDVF9UWVBFX1JFR0VYUCA9IC9eXFxzKihbXjtcXHNdKikoPzo7fFxcc3wkKS9cbnZhciBURVhUX1RZUEVfUkVHRVhQID0gL150ZXh0XFwvL2lcblxuLyoqXG4gKiBNb2R1bGUgZXhwb3J0cy5cbiAqIEBwdWJsaWNcbiAqL1xuXG5leHBvcnRzLmNoYXJzZXQgPSBjaGFyc2V0XG5leHBvcnRzLmNoYXJzZXRzID0geyBsb29rdXA6IGNoYXJzZXQgfVxuZXhwb3J0cy5jb250ZW50VHlwZSA9IGNvbnRlbnRUeXBlXG5leHBvcnRzLmV4dGVuc2lvbiA9IGV4dGVuc2lvblxuZXhwb3J0cy5leHRlbnNpb25zID0gT2JqZWN0LmNyZWF0ZShudWxsKVxuZXhwb3J0cy5sb29rdXAgPSBsb29rdXBcbmV4cG9ydHMudHlwZXMgPSBPYmplY3QuY3JlYXRlKG51bGwpXG5cbi8vIFBvcHVsYXRlIHRoZSBleHRlbnNpb25zL3R5cGVzIG1hcHNcbnBvcHVsYXRlTWFwcyhleHBvcnRzLmV4dGVuc2lvbnMsIGV4cG9ydHMudHlwZXMpXG5cbi8qKlxuICogR2V0IHRoZSBkZWZhdWx0IGNoYXJzZXQgZm9yIGEgTUlNRSB0eXBlLlxuICpcbiAqIEBwYXJhbSB7c3RyaW5nfSB0eXBlXG4gKiBAcmV0dXJuIHtib29sZWFufHN0cmluZ31cbiAqL1xuXG5mdW5jdGlvbiBjaGFyc2V0ICh0eXBlKSB7XG4gIGlmICghdHlwZSB8fCB0eXBlb2YgdHlwZSAhPT0gJ3N0cmluZycpIHtcbiAgICByZXR1cm4gZmFsc2VcbiAgfVxuXG4gIC8vIFRPRE86IHVzZSBtZWRpYS10eXBlclxuICB2YXIgbWF0Y2ggPSBFWFRSQUNUX1RZUEVfUkVHRVhQLmV4ZWModHlwZSlcbiAgdmFyIG1pbWUgPSBtYXRjaCAmJiBkYlttYXRjaFsxXS50b0xvd2VyQ2FzZSgpXVxuXG4gIGlmIChtaW1lICYmIG1pbWUuY2hhcnNldCkge1xuICAgIHJldHVybiBtaW1lLmNoYXJzZXRcbiAgfVxuXG4gIC8vIGRlZmF1bHQgdGV4dC8qIHRvIHV0Zi04XG4gIGlmIChtYXRjaCAmJiBURVhUX1RZUEVfUkVHRVhQLnRlc3QobWF0Y2hbMV0pKSB7XG4gICAgcmV0dXJuICdVVEYtOCdcbiAgfVxuXG4gIHJldHVybiBmYWxzZVxufVxuXG4vKipcbiAqIENyZWF0ZSBhIGZ1bGwgQ29udGVudC1UeXBlIGhlYWRlciBnaXZlbiBhIE1JTUUgdHlwZSBvciBleHRlbnNpb24uXG4gKlxuICogQHBhcmFtIHtzdHJpbmd9IHN0clxuICogQHJldHVybiB7Ym9vbGVhbnxzdHJpbmd9XG4gKi9cblxuZnVuY3Rpb24gY29udGVudFR5cGUgKHN0cikge1xuICAvLyBUT0RPOiBzaG91bGQgdGhpcyBldmVuIGJlIGluIHRoaXMgbW9kdWxlP1xuICBpZiAoIXN0ciB8fCB0eXBlb2Ygc3RyICE9PSAnc3RyaW5nJykge1xuICAgIHJldHVybiBmYWxzZVxuICB9XG5cbiAgdmFyIG1pbWUgPSBzdHIuaW5kZXhPZignLycpID09PSAtMVxuICAgID8gZXhwb3J0cy5sb29rdXAoc3RyKVxuICAgIDogc3RyXG5cbiAgaWYgKCFtaW1lKSB7XG4gICAgcmV0dXJuIGZhbHNlXG4gIH1cblxuICAvLyBUT0RPOiB1c2UgY29udGVudC10eXBlIG9yIG90aGVyIG1vZHVsZVxuICBpZiAobWltZS5pbmRleE9mKCdjaGFyc2V0JykgPT09IC0xKSB7XG4gICAgdmFyIGNoYXJzZXQgPSBleHBvcnRzLmNoYXJzZXQobWltZSlcbiAgICBpZiAoY2hhcnNldCkgbWltZSArPSAnOyBjaGFyc2V0PScgKyBjaGFyc2V0LnRvTG93ZXJDYXNlKClcbiAgfVxuXG4gIHJldHVybiBtaW1lXG59XG5cbi8qKlxuICogR2V0IHRoZSBkZWZhdWx0IGV4dGVuc2lvbiBmb3IgYSBNSU1FIHR5cGUuXG4gKlxuICogQHBhcmFtIHtzdHJpbmd9IHR5cGVcbiAqIEByZXR1cm4ge2Jvb2xlYW58c3RyaW5nfVxuICovXG5cbmZ1bmN0aW9uIGV4dGVuc2lvbiAodHlwZSkge1xuICBpZiAoIXR5cGUgfHwgdHlwZW9mIHR5cGUgIT09ICdzdHJpbmcnKSB7XG4gICAgcmV0dXJuIGZhbHNlXG4gIH1cblxuICAvLyBUT0RPOiB1c2UgbWVkaWEtdHlwZXJcbiAgdmFyIG1hdGNoID0gRVhUUkFDVF9UWVBFX1JFR0VYUC5leGVjKHR5cGUpXG5cbiAgLy8gZ2V0IGV4dGVuc2lvbnNcbiAgdmFyIGV4dHMgPSBtYXRjaCAmJiBleHBvcnRzLmV4dGVuc2lvbnNbbWF0Y2hbMV0udG9Mb3dlckNhc2UoKV1cblxuICBpZiAoIWV4dHMgfHwgIWV4dHMubGVuZ3RoKSB7XG4gICAgcmV0dXJuIGZhbHNlXG4gIH1cblxuICByZXR1cm4gZXh0c1swXVxufVxuXG4vKipcbiAqIExvb2t1cCB0aGUgTUlNRSB0eXBlIGZvciBhIGZpbGUgcGF0aC9leHRlbnNpb24uXG4gKlxuICogQHBhcmFtIHtzdHJpbmd9IHBhdGhcbiAqIEByZXR1cm4ge2Jvb2xlYW58c3RyaW5nfVxuICovXG5cbmZ1bmN0aW9uIGxvb2t1cCAocGF0aCkge1xuICBpZiAoIXBhdGggfHwgdHlwZW9mIHBhdGggIT09ICdzdHJpbmcnKSB7XG4gICAgcmV0dXJuIGZhbHNlXG4gIH1cblxuICAvLyBnZXQgdGhlIGV4dGVuc2lvbiAoXCJleHRcIiBvciBcIi5leHRcIiBvciBmdWxsIHBhdGgpXG4gIHZhciBleHRlbnNpb24gPSBleHRuYW1lKCd4LicgKyBwYXRoKVxuICAgIC50b0xvd2VyQ2FzZSgpXG4gICAgLnN1YnN0cigxKVxuXG4gIGlmICghZXh0ZW5zaW9uKSB7XG4gICAgcmV0dXJuIGZhbHNlXG4gIH1cblxuICByZXR1cm4gZXhwb3J0cy50eXBlc1tleHRlbnNpb25dIHx8IGZhbHNlXG59XG5cbi8qKlxuICogUG9wdWxhdGUgdGhlIGV4dGVuc2lvbnMgYW5kIHR5cGVzIG1hcHMuXG4gKiBAcHJpdmF0ZVxuICovXG5cbmZ1bmN0aW9uIHBvcHVsYXRlTWFwcyAoZXh0ZW5zaW9ucywgdHlwZXMpIHtcbiAgLy8gc291cmNlIHByZWZlcmVuY2UgKGxlYXN0IC0+IG1vc3QpXG4gIHZhciBwcmVmZXJlbmNlID0gWyduZ2lueCcsICdhcGFjaGUnLCB1bmRlZmluZWQsICdpYW5hJ11cblxuICBPYmplY3Qua2V5cyhkYikuZm9yRWFjaChmdW5jdGlvbiBmb3JFYWNoTWltZVR5cGUgKHR5cGUpIHtcbiAgICB2YXIgbWltZSA9IGRiW3R5cGVdXG4gICAgdmFyIGV4dHMgPSBtaW1lLmV4dGVuc2lvbnNcblxuICAgIGlmICghZXh0cyB8fCAhZXh0cy5sZW5ndGgpIHtcbiAgICAgIHJldHVyblxuICAgIH1cblxuICAgIC8vIG1pbWUgLT4gZXh0ZW5zaW9uc1xuICAgIGV4dGVuc2lvbnNbdHlwZV0gPSBleHRzXG5cbiAgICAvLyBleHRlbnNpb24gLT4gbWltZVxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgZXh0cy5sZW5ndGg7IGkrKykge1xuICAgICAgdmFyIGV4dGVuc2lvbiA9IGV4dHNbaV1cblxuICAgICAgaWYgKHR5cGVzW2V4dGVuc2lvbl0pIHtcbiAgICAgICAgdmFyIGZyb20gPSBwcmVmZXJlbmNlLmluZGV4T2YoZGJbdHlwZXNbZXh0ZW5zaW9uXV0uc291cmNlKVxuICAgICAgICB2YXIgdG8gPSBwcmVmZXJlbmNlLmluZGV4T2YobWltZS5zb3VyY2UpXG5cbiAgICAgICAgaWYgKHR5cGVzW2V4dGVuc2lvbl0gIT09ICdhcHBsaWNhdGlvbi9vY3RldC1zdHJlYW0nICYmXG4gICAgICAgICAgKGZyb20gPiB0byB8fCAoZnJvbSA9PT0gdG8gJiYgdHlwZXNbZXh0ZW5zaW9uXS5zdWJzdHIoMCwgMTIpID09PSAnYXBwbGljYXRpb24vJykpKSB7XG4gICAgICAgICAgLy8gc2tpcCB0aGUgcmVtYXBwaW5nXG4gICAgICAgICAgY29udGludWVcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICAvLyBzZXQgdGhlIGV4dGVuc2lvbiAtPiBtaW1lXG4gICAgICB0eXBlc1tleHRlbnNpb25dID0gdHlwZVxuICAgIH1cbiAgfSlcbn1cbiJdLCJuYW1lcyI6WyJleHRlbnNpb25zIiwidHlwZXMiLCJwcmVmZXJlbmNlIiwiZGIiLCJleHRuYW1lIiwiRVhUUkFDVF9UWVBFX1JFR0VYUCIsIlRFWFRfVFlQRV9SRUdFWFAiLCJjaGFyc2V0IiwidHlwZSIsIm1hdGNoIiwiZXhlYyIsIm1pbWUiLCJ0b0xvd2VyQ2FzZSIsInRlc3QiLCJleHBvcnRzIiwiY2hhcnNldHMiLCJsb29rdXAiLCJjb250ZW50VHlwZSIsInN0ciIsImluZGV4T2YiLCJleHRlbnNpb24iLCJleHRzIiwibGVuZ3RoIiwiT2JqZWN0IiwiY3JlYXRlIiwicGF0aCIsInN1YnN0ciIsInVuZGVmaW5lZCIsImtleXMiLCJmb3JFYWNoIiwiaSIsImZyb20iLCJzb3VyY2UiLCJ0byJdLCJzb3VyY2VSb290IjoiIn0=