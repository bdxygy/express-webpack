"use strict";exports.id="mod-node_modules_negotiator_lib_language_js-4c00d136",exports.ids=["mod-node_modules_negotiator_lib_language_js-4c00d136"],exports.modules={"./node_modules/negotiator/lib/language.js":r=>{r.exports=n,r.exports.preferredLanguages=n;var e=/^\s*([^\s\-;]+)(?:-([^\s;]+))?\s*(?:;(.*))?$/;function t(r,t){var o=e.exec(r);if(!o)return null;var n=o[1],i=o[2],u=n;i&&(u+="-"+i);var l=1;if(o[3])for(var s=o[3].split(";"),f=0;f<s.length;f++){var a=s[f].split("=");"q"===a[0]&&(l=parseFloat(a[1]))}return{prefix:n,suffix:i,q:l,i:t,full:u}}function o(r,e,o){var n=t(r);if(!n)return null;var i=0;if(e.full.toLowerCase()===n.full.toLowerCase())i|=4;else if(e.prefix.toLowerCase()===n.full.toLowerCase())i|=2;else if(e.full.toLowerCase()===n.prefix.toLowerCase())i|=1;else if("*"!==e.full)return null;return{i:o,o:e.i,q:e.q,s:i}}function n(r,e){var n=function(r){for(var e=r.split(","),o=0,n=0;o<e.length;o++){var i=t(e[o].trim(),o);i&&(e[n++]=i)}return e.length=n,e}(void 0===r?"*":r||"");if(!e)return n.filter(l).sort(i).map(u);var s=e.map((function(r,e){return function(r,e,t){for(var n={o:-1,q:0,s:0},i=0;i<e.length;i++){var u=o(r,e[i],t);u&&(n.s-u.s||n.q-u.q||n.o-u.o)<0&&(n=u)}return n}(r,n,e)}));return s.filter(l).sort(i).map((function(r){return e[s.indexOf(r)]}))}function i(r,e){return e.q-r.q||e.s-r.s||r.o-e.o||r.i-e.i||0}function u(r){return r.full}function l(r){return r.q>0}}};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,