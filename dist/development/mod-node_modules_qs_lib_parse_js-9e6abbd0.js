"use strict";exports.id="mod-node_modules_qs_lib_parse_js-9e6abbd0",exports.ids=["mod-node_modules_qs_lib_parse_js-9e6abbd0"],exports.modules={"./node_modules/qs/lib/parse.js":(e,r,t)=>{var i=t("./node_modules/qs/lib/utils.js"),o=Object.prototype.hasOwnProperty,a=Array.isArray,n={allowDots:!1,allowPrototypes:!1,allowSparse:!1,arrayLimit:20,charset:"utf-8",charsetSentinel:!1,comma:!1,decoder:i.decode,delimiter:"&",depth:5,ignoreQueryPrefix:!1,interpretNumericEntities:!1,parameterLimit:1e3,parseArrays:!0,plainObjects:!1,strictNullHandling:!1},l=function(e){return e.replace(/&#(\d+);/g,(function(e,r){return String.fromCharCode(parseInt(r,10))}))},s=function(e,r){return e&&"string"==typeof e&&r.comma&&e.indexOf(",")>-1?e.split(","):e},c=function(e,r,t,i){if(e){var a=t.allowDots?e.replace(/\.([^.[]+)/g,"[$1]"):e,n=/(\[[^[\]]*])/g,l=t.depth>0&&/(\[[^[\]]*])/.exec(a),c=l?a.slice(0,l.index):a,p=[];if(c){if(!t.plainObjects&&o.call(Object.prototype,c)&&!t.allowPrototypes)return;p.push(c)}for(var d=0;t.depth>0&&null!==(l=n.exec(a))&&d<t.depth;){if(d+=1,!t.plainObjects&&o.call(Object.prototype,l[1].slice(1,-1))&&!t.allowPrototypes)return;p.push(l[1])}return l&&p.push("["+a.slice(l.index)+"]"),function(e,r,t,i){for(var o=i?r:s(r,t),a=e.length-1;a>=0;--a){var n,l=e[a];if("[]"===l&&t.parseArrays)n=[].concat(o);else{n=t.plainObjects?Object.create(null):{};var c="["===l.charAt(0)&&"]"===l.charAt(l.length-1)?l.slice(1,-1):l,p=parseInt(c,10);t.parseArrays||""!==c?!isNaN(p)&&l!==c&&String(p)===c&&p>=0&&t.parseArrays&&p<=t.arrayLimit?(n=[])[p]=o:"__proto__"!==c&&(n[c]=o):n={0:o}}o=n}return o}(p,r,t,i)}};e.exports=function(e,r){var t=function(e){if(!e)return n;if(null!==e.decoder&&void 0!==e.decoder&&"function"!=typeof e.decoder)throw new TypeError("Decoder has to be a function.");if(void 0!==e.charset&&"utf-8"!==e.charset&&"iso-8859-1"!==e.charset)throw new TypeError("The charset option must be either utf-8, iso-8859-1, or undefined");var r=void 0===e.charset?n.charset:e.charset;return{allowDots:void 0===e.allowDots?n.allowDots:!!e.allowDots,allowPrototypes:"boolean"==typeof e.allowPrototypes?e.allowPrototypes:n.allowPrototypes,allowSparse:"boolean"==typeof e.allowSparse?e.allowSparse:n.allowSparse,arrayLimit:"number"==typeof e.arrayLimit?e.arrayLimit:n.arrayLimit,charset:r,charsetSentinel:"boolean"==typeof e.charsetSentinel?e.charsetSentinel:n.charsetSentinel,comma:"boolean"==typeof e.comma?e.comma:n.comma,decoder:"function"==typeof e.decoder?e.decoder:n.decoder,delimiter:"string"==typeof e.delimiter||i.isRegExp(e.delimiter)?e.delimiter:n.delimiter,depth:"number"==typeof e.depth||!1===e.depth?+e.depth:n.depth,ignoreQueryPrefix:!0===e.ignoreQueryPrefix,interpretNumericEntities:"boolean"==typeof e.interpretNumericEntities?e.interpretNumericEntities:n.interpretNumericEntities,parameterLimit:"number"==typeof e.parameterLimit?e.parameterLimit:n.parameterLimit,parseArrays:!1!==e.parseArrays,plainObjects:"boolean"==typeof e.plainObjects?e.plainObjects:n.plainObjects,strictNullHandling:"boolean"==typeof e.strictNullHandling?e.strictNullHandling:n.strictNullHandling}}(r);if(""===e||null==e)return t.plainObjects?Object.create(null):{};for(var p="string"==typeof e?function(e,r){var t,c={},p=r.ignoreQueryPrefix?e.replace(/^\?/,""):e,d=r.parameterLimit===1/0?void 0:r.parameterLimit,u=p.split(r.delimiter,d),f=-1,m=r.charset;if(r.charsetSentinel)for(t=0;t<u.length;++t)0===u[t].indexOf("utf8=")&&("utf8=%E2%9C%93"===u[t]?m="utf-8":"utf8=%26%2310003%3B"===u[t]&&(m="iso-8859-1"),f=t,t=u.length);for(t=0;t<u.length;++t)if(t!==f){var y,h,b=u[t],g=b.indexOf("]="),w=-1===g?b.indexOf("="):g+1;-1===w?(y=r.decoder(b,n.decoder,m,"key"),h=r.strictNullHandling?null:""):(y=r.decoder(b.slice(0,w),n.decoder,m,"key"),h=i.maybeMap(s(b.slice(w+1),r),(function(e){return r.decoder(e,n.decoder,m,"value")}))),h&&r.interpretNumericEntities&&"iso-8859-1"===m&&(h=l(h)),b.indexOf("[]=")>-1&&(h=a(h)?[h]:h),o.call(c,y)?c[y]=i.combine(c[y],h):c[y]=h}return c}(e,t):e,d=t.plainObjects?Object.create(null):{},u=Object.keys(p),f=0;f<u.length;++f){var m=u[f],y=c(m,p[m],t,"string"==typeof e);d=i.merge(d,y,t)}return!0===t.allowSparse?d:i.compact(d)}}};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,