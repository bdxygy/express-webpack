"use strict";exports.id="mod-node_modules_iconv-lite_encodings_utf7_js-c642a962",exports.ids=["mod-node_modules_iconv-lite_encodings_utf7_js-c642a962"],exports.modules={"./node_modules/iconv-lite/encodings/utf7.js":(e,t,i)=>{var s=i("./node_modules/safer-buffer/safer.js").Buffer;function c(e,t){this.iconv=t}t.utf7=c,t.unicode11utf7="utf7",c.prototype.encoder=n,c.prototype.decoder=r,c.prototype.bomAware=!0;var o=/[^A-Za-z0-9'\(\),-\.\/:\? \n\r\t]+/g;function n(e,t){this.iconv=t.iconv}function r(e,t){this.iconv=t.iconv,this.inBase64=!1,this.base64Accum=""}n.prototype.write=function(e){return s.from(e.replace(o,function(e){return"+"+("+"===e?"":this.iconv.encode(e,"utf16-be").toString("base64").replace(/=+$/,""))+"-"}.bind(this)))},n.prototype.end=function(){};for(var a=/[A-Za-z0-9\/+]/,h=[],u=0;u<256;u++)h[u]=a.test(String.fromCharCode(u));var d="+".charCodeAt(0),l="-".charCodeAt(0),f="&".charCodeAt(0);function b(e,t){this.iconv=t}function p(e,t){this.iconv=t.iconv,this.inBase64=!1,this.base64Accum=s.alloc(6),this.base64AccumIdx=0}function v(e,t){this.iconv=t.iconv,this.inBase64=!1,this.base64Accum=""}r.prototype.write=function(e){for(var t="",i=0,c=this.inBase64,o=this.base64Accum,n=0;n<e.length;n++)if(c){if(!h[e[n]]){if(n==i&&e[n]==l)t+="+";else{var r=o+e.slice(i,n).toString();t+=this.iconv.decode(s.from(r,"base64"),"utf16-be")}e[n]!=l&&n--,i=n+1,c=!1,o=""}}else e[n]==d&&(t+=this.iconv.decode(e.slice(i,n),"ascii"),i=n+1,c=!0);if(c){var a=(r=o+e.slice(i).toString()).length-r.length%8;o=r.slice(a),r=r.slice(0,a),t+=this.iconv.decode(s.from(r,"base64"),"utf16-be")}else t+=this.iconv.decode(e.slice(i),"ascii");return this.inBase64=c,this.base64Accum=o,t},r.prototype.end=function(){var e="";return this.inBase64&&this.base64Accum.length>0&&(e=this.iconv.decode(s.from(this.base64Accum,"base64"),"utf16-be")),this.inBase64=!1,this.base64Accum="",e},t.utf7imap=b,b.prototype.encoder=p,b.prototype.decoder=v,b.prototype.bomAware=!0,p.prototype.write=function(e){for(var t=this.inBase64,i=this.base64Accum,c=this.base64AccumIdx,o=s.alloc(5*e.length+10),n=0,r=0;r<e.length;r++){var a=e.charCodeAt(r);32<=a&&a<=126?(t&&(c>0&&(n+=o.write(i.slice(0,c).toString("base64").replace(/\//g,",").replace(/=+$/,""),n),c=0),o[n++]=l,t=!1),t||(o[n++]=a,a===f&&(o[n++]=l))):(t||(o[n++]=f,t=!0),t&&(i[c++]=a>>8,i[c++]=255&a,c==i.length&&(n+=o.write(i.toString("base64").replace(/\//g,","),n),c=0)))}return this.inBase64=t,this.base64AccumIdx=c,o.slice(0,n)},p.prototype.end=function(){var e=s.alloc(10),t=0;return this.inBase64&&(this.base64AccumIdx>0&&(t+=e.write(this.base64Accum.slice(0,this.base64AccumIdx).toString("base64").replace(/\//g,",").replace(/=+$/,""),t),this.base64AccumIdx=0),e[t++]=l,this.inBase64=!1),e.slice(0,t)};var m=h.slice();m[",".charCodeAt(0)]=!0,v.prototype.write=function(e){for(var t="",i=0,c=this.inBase64,o=this.base64Accum,n=0;n<e.length;n++)if(c){if(!m[e[n]]){if(n==i&&e[n]==l)t+="&";else{var r=o+e.slice(i,n).toString().replace(/,/g,"/");t+=this.iconv.decode(s.from(r,"base64"),"utf16-be")}e[n]!=l&&n--,i=n+1,c=!1,o=""}}else e[n]==f&&(t+=this.iconv.decode(e.slice(i,n),"ascii"),i=n+1,c=!0);if(c){var a=(r=o+e.slice(i).toString().replace(/,/g,"/")).length-r.length%8;o=r.slice(a),r=r.slice(0,a),t+=this.iconv.decode(s.from(r,"base64"),"utf16-be")}else t+=this.iconv.decode(e.slice(i),"ascii");return this.inBase64=c,this.base64Accum=o,t},v.prototype.end=function(){var e="";return this.inBase64&&this.base64Accum.length>0&&(e=this.iconv.decode(s.from(this.base64Accum,"base64"),"utf16-be")),this.inBase64=!1,this.base64Accum="",e}}};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,