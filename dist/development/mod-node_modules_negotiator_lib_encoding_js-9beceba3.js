"use strict";exports.id="mod-node_modules_negotiator_lib_encoding_js-9beceba3",exports.ids=["mod-node_modules_negotiator_lib_encoding_js-9beceba3"],exports.modules={"./node_modules/negotiator/lib/encoding.js":n=>{n.exports=o,n.exports.preferredEncodings=o;var e=/^\s*([^\s;]+)\s*(?:;(.*))?$/;function r(n,r){var t=e.exec(n);if(!t)return null;var o=t[1],i=1;if(t[2])for(var s=t[2].split(";"),u=0;u<s.length;u++){var a=s[u].trim().split("=");if("q"===a[0]){i=parseFloat(a[1]);break}}return{encoding:o,q:i,i:r}}function t(n,e,r){var t=0;if(e.encoding.toLowerCase()===n.toLowerCase())t|=1;else if("*"!==e.encoding)return null;return{i:r,o:e.i,q:e.q,s:t}}function o(n,e){var o=function(n){for(var e=n.split(","),o=!1,i=1,s=0,u=0;s<e.length;s++){var a=r(e[s].trim(),s);a&&(e[u++]=a,o=o||t("identity",a),i=Math.min(i,a.q||1))}return o||(e[u++]={encoding:"identity",q:i,i:s}),e.length=u,e}(n||"");if(!e)return o.filter(u).sort(i).map(s);var a=e.map((function(n,e){return function(n,e,r){for(var o={o:-1,q:0,s:0},i=0;i<e.length;i++){var s=t(n,e[i],r);s&&(o.s-s.s||o.q-s.q||o.o-s.o)<0&&(o=s)}return o}(n,o,e)}));return a.filter(u).sort(i).map((function(n){return e[a.indexOf(n)]}))}function i(n,e){return e.q-n.q||e.s-n.s||n.o-e.o||n.i-e.i||0}function s(n){return n.encoding}function u(n){return n.q>0}}};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,