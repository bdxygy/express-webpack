exports.id="mod-node_modules_depd_index_js-f5129ebe",exports.ids=["mod-node_modules_depd_index_js-f5129ebe"],exports.modules={"./node_modules/depd/index.js":(e,r,t)=>{var n=t("path").relative;e.exports=function(e){if(!e)throw new TypeError("argument namespace is required");var r=s(m()[1])[0];function t(e){c.call(t,e)}return t._file=r,t._ignored=function(e){if(process.noDeprecation)return!0;return i(process.env.NO_DEPRECATION||"",e)}(e),t._namespace=e,t._traced=function(e){if(process.traceDeprecation)return!0;return i(process.env.TRACE_DEPRECATION||"",e)}(e),t._warned=Object.create(null),t.function=g,t.property=v,t};var a=process.cwd();function i(e,r){for(var t=e.split(/[ ,]+/),n=String(r).toLowerCase(),a=0;a<t.length;a++){var i=t[a];if(i&&("*"===i||i.toLowerCase()===n))return!0}return!1}function o(e){var r=this.name+": "+this.namespace;this.message&&(r+=" deprecated "+this.message);for(var t=0;t<e.length;t++)r+="\n    at "+e[t].toString();return r}function c(e,r){var t,n,a=(t=process,n="deprecation",("function"!=typeof t.listenerCount?t.listeners(n).length:t.listenerCount(n))>0);if(a||!this._ignored){var i,o,c,p,d=0,g=!1,v=m(),h=this._file;for(r?(p=r,(c=s(v[1])).name=p.name,h=c[0]):c=p=s(v[d=2]);d<v.length;d++)if((o=(i=s(v[d]))[0])===h)g=!0;else if(o===this._file)h=this._file;else if(g)break;var y=i?p.join(":")+"__"+i.join(":"):void 0;if(void 0===y||!(y in this._warned)){this._warned[y]=!0;var _=e;if(_||(_=c!==p&&c.name?u(c):u(p)),a){var w=b(this._namespace,_,v.slice(d));process.emit("deprecation",w)}else{var E=(process.stderr.isTTY?l:f).call(this,_,i,v.slice(d));process.stderr.write(E+"\n","utf8")}}}}function s(e){var r=e.getFileName()||"<anonymous>",t=e.getLineNumber(),n=e.getColumnNumber();e.isEval()&&(r=e.getEvalOrigin()+", "+r);var a=[r,t,n];return a.callSite=e,a.name=e.getFunctionName(),a}function u(e){var r=e.callSite,t=e.name;t||(t="<anonymous@"+p(e)+">");var n=r.getThis(),a=n&&r.getTypeName();return"Object"===a&&(a=void 0),"Function"===a&&(a=n.name||a),a&&r.getMethodName()?a+"."+t:t}function f(e,r,t){var n=(new Date).toUTCString()+" "+this._namespace+" deprecated "+e;if(this._traced){for(var a=0;a<t.length;a++)n+="\n    at "+t[a].toString();return n}return r&&(n+=" at "+p(r)),n}function l(e,r,t){var n="[36;1m"+this._namespace+"[22;39m [33;1mdeprecated[22;39m [0m"+e+"[39m";if(this._traced){for(var a=0;a<t.length;a++)n+="\n    [36mat "+t[a].toString()+"[39m";return n}return r&&(n+=" [36m"+p(r)+"[39m"),n}function p(e){return n(a,e[0])+":"+e[1]+":"+e[2]}function m(){var e=Error.stackTraceLimit,r={},t=Error.prepareStackTrace;Error.prepareStackTrace=d,Error.stackTraceLimit=Math.max(10,e),Error.captureStackTrace(r);var n=r.stack.slice(1);return Error.prepareStackTrace=t,Error.stackTraceLimit=e,n}function d(e,r){return r}function g(e,r){if("function"!=typeof e)throw new TypeError("argument fn must be a function");var t=function(e){for(var r="",t=0;t<e;t++)r+=", arg"+t;return r.substr(2)}(e.length),n=s(m()[1]);return n.name=e.name,new Function("fn","log","deprecate","message","site",'"use strict"\nreturn function ('+t+") {log.call(deprecate, message, site)\nreturn fn.apply(this, arguments)\n}")(e,c,this,r,n)}function v(e,r,t){if(!e||"object"!=typeof e&&"function"!=typeof e)throw new TypeError("argument obj must be object");var n=Object.getOwnPropertyDescriptor(e,r);if(!n)throw new TypeError("must call property on owner object");if(!n.configurable)throw new TypeError("property must be configurable");var a=this,i=s(m()[1]);i.name=r,"value"in n&&(n=function(e,r,t){var n=Object.getOwnPropertyDescriptor(e,r),a=n.value;return n.get=function(){return a},n.writable&&(n.set=function(e){return a=e}),delete n.value,delete n.writable,Object.defineProperty(e,r,n),n}(e,r));var o=n.get,u=n.set;"function"==typeof o&&(n.get=function(){return c.call(a,t,i),o.apply(this,arguments)}),"function"==typeof u&&(n.set=function(){return c.call(a,t,i),u.apply(this,arguments)}),Object.defineProperty(e,r,n)}function b(e,r,t){var n,a=new Error;return Object.defineProperty(a,"constructor",{value:b}),Object.defineProperty(a,"message",{configurable:!0,enumerable:!1,value:r,writable:!0}),Object.defineProperty(a,"name",{enumerable:!1,configurable:!0,value:"DeprecationError",writable:!0}),Object.defineProperty(a,"namespace",{configurable:!0,enumerable:!1,value:e,writable:!0}),Object.defineProperty(a,"stack",{configurable:!0,enumerable:!1,get:function(){return void 0!==n?n:n=o.call(this,t)},set:function(e){n=e}}),a}}};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,