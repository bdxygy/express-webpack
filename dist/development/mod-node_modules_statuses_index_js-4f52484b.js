"use strict";exports.id="mod-node_modules_statuses_index_js-4f52484b",exports.ids=["mod-node_modules_statuses_index_js-4f52484b"],exports.modules={"./node_modules/statuses/index.js":(e,r,t)=>{var s=t("./node_modules/statuses/codes.json");function o(e){if(!Object.prototype.hasOwnProperty.call(n.message,e))throw new Error("invalid status code: "+e);return n.message[e]}function n(e){if("number"==typeof e)return o(e);if("string"!=typeof e)throw new TypeError("code must be a number or string");var r=parseInt(e,10);return isNaN(r)?function(e){var r=e.toLowerCase();if(!Object.prototype.hasOwnProperty.call(n.code,r))throw new Error('invalid status message: "'+e+'"');return n.code[r]}(e):o(r)}e.exports=n,n.message=s,n.code=function(e){var r={};return Object.keys(e).forEach((function(t){var s=e[t],o=Number(t);r[s.toLowerCase()]=o})),r}(s),n.codes=function(e){return Object.keys(e).map((function(e){return Number(e)}))}(s),n.redirect={300:!0,301:!0,302:!0,303:!0,305:!0,307:!0,308:!0},n.empty={204:!0,205:!0,304:!0},n.retry={502:!0,503:!0,504:!0}}};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9kLW5vZGVfbW9kdWxlc19zdGF0dXNlc19pbmRleF9qcy00ZjUyNDg0Yi5qcyIsIm1hcHBpbmdzIjoiZ01BY0EsSUFBSUEsRUFBUSxFQUFRLHNDQTZGcEIsU0FBU0MsRUFBa0JDLEdBQ3pCLElBQUtDLE9BQU9DLFVBQVVDLGVBQWVDLEtBQUtDLEVBQU9DLFFBQVNOLEdBQ3hELE1BQU0sSUFBSU8sTUFBTSx3QkFBMEJQLEdBRzVDLE9BQU9LLEVBQU9DLFFBQVFOLEVBQ3hCLENBZ0JBLFNBQVNLLEVBQVFMLEdBQ2YsR0FBb0IsaUJBQVRBLEVBQ1QsT0FBT0QsRUFBaUJDLEdBRzFCLEdBQW9CLGlCQUFUQSxFQUNULE1BQU0sSUFBSVEsVUFBVSxtQ0FJdEIsSUFBSUMsRUFBSUMsU0FBU1YsRUFBTSxJQUN2QixPQUFLVyxNQUFNRixHQWhEYixTQUF3QkgsR0FDdEIsSUFBSU0sRUFBTU4sRUFBUU8sY0FFbEIsSUFBS1osT0FBT0MsVUFBVUMsZUFBZUMsS0FBS0MsRUFBT0wsS0FBTVksR0FDckQsTUFBTSxJQUFJTCxNQUFNLDRCQUE4QkQsRUFBVSxLQUcxRCxPQUFPRCxFQUFPTCxLQUFLWSxFQUNyQixDQTRDU0UsQ0FBY2QsR0FIWkQsRUFBaUJVLEVBSTVCLENBNUhBTSxFQUFPQyxRQUFVWCxFQUdqQkEsRUFBT0MsUUFBVVIsRUFHakJPLEVBQU9MLEtBbUNQLFNBQXVDRixHQUNyQyxJQUFJbUIsRUFBTSxDQUFDLEVBVVgsT0FSQWhCLE9BQU9pQixLQUFLcEIsR0FBT3FCLFNBQVEsU0FBc0JuQixHQUMvQyxJQUFJTSxFQUFVUixFQUFNRSxHQUNoQkssRUFBU2UsT0FBT3BCLEdBR3BCaUIsRUFBSVgsRUFBUU8sZUFBaUJSLENBQy9CLElBRU9ZLENBQ1QsQ0EvQ2NJLENBQTZCdkIsR0FHM0NPLEVBQU9QLE1BbURQLFNBQStCQSxHQUM3QixPQUFPRyxPQUFPaUIsS0FBS3BCLEdBQU9tQixLQUFJLFNBQWtCakIsR0FDOUMsT0FBT29CLE9BQU9wQixFQUNoQixHQUNGLENBdkRlc0IsQ0FBcUJ4QixHQUdwQ08sRUFBT2tCLFNBQVcsQ0FDaEIsS0FBSyxFQUNMLEtBQUssRUFDTCxLQUFLLEVBQ0wsS0FBSyxFQUNMLEtBQUssRUFDTCxLQUFLLEVBQ0wsS0FBSyxHQUlQbEIsRUFBT21CLE1BQVEsQ0FDYixLQUFLLEVBQ0wsS0FBSyxFQUNMLEtBQUssR0FJUG5CLEVBQU9vQixNQUFRLENBQ2IsS0FBSyxFQUNMLEtBQUssRUFDTCxLQUFLLEUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AYmR4eWd5L2V4cHJlc3Mtd2VicGFjay8uL25vZGVfbW9kdWxlcy9zdGF0dXNlcy9pbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiFcbiAqIHN0YXR1c2VzXG4gKiBDb3B5cmlnaHQoYykgMjAxNCBKb25hdGhhbiBPbmdcbiAqIENvcHlyaWdodChjKSAyMDE2IERvdWdsYXMgQ2hyaXN0b3BoZXIgV2lsc29uXG4gKiBNSVQgTGljZW5zZWRcbiAqL1xuXG4ndXNlIHN0cmljdCdcblxuLyoqXG4gKiBNb2R1bGUgZGVwZW5kZW5jaWVzLlxuICogQHByaXZhdGVcbiAqL1xuXG52YXIgY29kZXMgPSByZXF1aXJlKCcuL2NvZGVzLmpzb24nKVxuXG4vKipcbiAqIE1vZHVsZSBleHBvcnRzLlxuICogQHB1YmxpY1xuICovXG5cbm1vZHVsZS5leHBvcnRzID0gc3RhdHVzXG5cbi8vIHN0YXR1cyBjb2RlIHRvIG1lc3NhZ2UgbWFwXG5zdGF0dXMubWVzc2FnZSA9IGNvZGVzXG5cbi8vIHN0YXR1cyBtZXNzYWdlIChsb3dlci1jYXNlKSB0byBjb2RlIG1hcFxuc3RhdHVzLmNvZGUgPSBjcmVhdGVNZXNzYWdlVG9TdGF0dXNDb2RlTWFwKGNvZGVzKVxuXG4vLyBhcnJheSBvZiBzdGF0dXMgY29kZXNcbnN0YXR1cy5jb2RlcyA9IGNyZWF0ZVN0YXR1c0NvZGVMaXN0KGNvZGVzKVxuXG4vLyBzdGF0dXMgY29kZXMgZm9yIHJlZGlyZWN0c1xuc3RhdHVzLnJlZGlyZWN0ID0ge1xuICAzMDA6IHRydWUsXG4gIDMwMTogdHJ1ZSxcbiAgMzAyOiB0cnVlLFxuICAzMDM6IHRydWUsXG4gIDMwNTogdHJ1ZSxcbiAgMzA3OiB0cnVlLFxuICAzMDg6IHRydWVcbn1cblxuLy8gc3RhdHVzIGNvZGVzIGZvciBlbXB0eSBib2RpZXNcbnN0YXR1cy5lbXB0eSA9IHtcbiAgMjA0OiB0cnVlLFxuICAyMDU6IHRydWUsXG4gIDMwNDogdHJ1ZVxufVxuXG4vLyBzdGF0dXMgY29kZXMgZm9yIHdoZW4geW91IHNob3VsZCByZXRyeSB0aGUgcmVxdWVzdFxuc3RhdHVzLnJldHJ5ID0ge1xuICA1MDI6IHRydWUsXG4gIDUwMzogdHJ1ZSxcbiAgNTA0OiB0cnVlXG59XG5cbi8qKlxuICogQ3JlYXRlIGEgbWFwIG9mIG1lc3NhZ2UgdG8gc3RhdHVzIGNvZGUuXG4gKiBAcHJpdmF0ZVxuICovXG5cbmZ1bmN0aW9uIGNyZWF0ZU1lc3NhZ2VUb1N0YXR1c0NvZGVNYXAgKGNvZGVzKSB7XG4gIHZhciBtYXAgPSB7fVxuXG4gIE9iamVjdC5rZXlzKGNvZGVzKS5mb3JFYWNoKGZ1bmN0aW9uIGZvckVhY2hDb2RlIChjb2RlKSB7XG4gICAgdmFyIG1lc3NhZ2UgPSBjb2Rlc1tjb2RlXVxuICAgIHZhciBzdGF0dXMgPSBOdW1iZXIoY29kZSlcblxuICAgIC8vIHBvcHVsYXRlIG1hcFxuICAgIG1hcFttZXNzYWdlLnRvTG93ZXJDYXNlKCldID0gc3RhdHVzXG4gIH0pXG5cbiAgcmV0dXJuIG1hcFxufVxuXG4vKipcbiAqIENyZWF0ZSBhIGxpc3Qgb2YgYWxsIHN0YXR1cyBjb2Rlcy5cbiAqIEBwcml2YXRlXG4gKi9cblxuZnVuY3Rpb24gY3JlYXRlU3RhdHVzQ29kZUxpc3QgKGNvZGVzKSB7XG4gIHJldHVybiBPYmplY3Qua2V5cyhjb2RlcykubWFwKGZ1bmN0aW9uIG1hcENvZGUgKGNvZGUpIHtcbiAgICByZXR1cm4gTnVtYmVyKGNvZGUpXG4gIH0pXG59XG5cbi8qKlxuICogR2V0IHRoZSBzdGF0dXMgY29kZSBmb3IgZ2l2ZW4gbWVzc2FnZS5cbiAqIEBwcml2YXRlXG4gKi9cblxuZnVuY3Rpb24gZ2V0U3RhdHVzQ29kZSAobWVzc2FnZSkge1xuICB2YXIgbXNnID0gbWVzc2FnZS50b0xvd2VyQ2FzZSgpXG5cbiAgaWYgKCFPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoc3RhdHVzLmNvZGUsIG1zZykpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ2ludmFsaWQgc3RhdHVzIG1lc3NhZ2U6IFwiJyArIG1lc3NhZ2UgKyAnXCInKVxuICB9XG5cbiAgcmV0dXJuIHN0YXR1cy5jb2RlW21zZ11cbn1cblxuLyoqXG4gKiBHZXQgdGhlIHN0YXR1cyBtZXNzYWdlIGZvciBnaXZlbiBjb2RlLlxuICogQHByaXZhdGVcbiAqL1xuXG5mdW5jdGlvbiBnZXRTdGF0dXNNZXNzYWdlIChjb2RlKSB7XG4gIGlmICghT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHN0YXR1cy5tZXNzYWdlLCBjb2RlKSkge1xuICAgIHRocm93IG5ldyBFcnJvcignaW52YWxpZCBzdGF0dXMgY29kZTogJyArIGNvZGUpXG4gIH1cblxuICByZXR1cm4gc3RhdHVzLm1lc3NhZ2VbY29kZV1cbn1cblxuLyoqXG4gKiBHZXQgdGhlIHN0YXR1cyBjb2RlLlxuICpcbiAqIEdpdmVuIGEgbnVtYmVyLCB0aGlzIHdpbGwgdGhyb3cgaWYgaXQgaXMgbm90IGEga25vd24gc3RhdHVzXG4gKiBjb2RlLCBvdGhlcndpc2UgdGhlIGNvZGUgd2lsbCBiZSByZXR1cm5lZC4gR2l2ZW4gYSBzdHJpbmcsXG4gKiB0aGUgc3RyaW5nIHdpbGwgYmUgcGFyc2VkIGZvciBhIG51bWJlciBhbmQgcmV0dXJuIHRoZSBjb2RlXG4gKiBpZiB2YWxpZCwgb3RoZXJ3aXNlIHdpbGwgbG9va3VwIHRoZSBjb2RlIGFzc3VtaW5nIHRoaXMgaXNcbiAqIHRoZSBzdGF0dXMgbWVzc2FnZS5cbiAqXG4gKiBAcGFyYW0ge3N0cmluZ3xudW1iZXJ9IGNvZGVcbiAqIEByZXR1cm5zIHtudW1iZXJ9XG4gKiBAcHVibGljXG4gKi9cblxuZnVuY3Rpb24gc3RhdHVzIChjb2RlKSB7XG4gIGlmICh0eXBlb2YgY29kZSA9PT0gJ251bWJlcicpIHtcbiAgICByZXR1cm4gZ2V0U3RhdHVzTWVzc2FnZShjb2RlKVxuICB9XG5cbiAgaWYgKHR5cGVvZiBjb2RlICE9PSAnc3RyaW5nJykge1xuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ2NvZGUgbXVzdCBiZSBhIG51bWJlciBvciBzdHJpbmcnKVxuICB9XG5cbiAgLy8gJzQwMydcbiAgdmFyIG4gPSBwYXJzZUludChjb2RlLCAxMClcbiAgaWYgKCFpc05hTihuKSkge1xuICAgIHJldHVybiBnZXRTdGF0dXNNZXNzYWdlKG4pXG4gIH1cblxuICByZXR1cm4gZ2V0U3RhdHVzQ29kZShjb2RlKVxufVxuIl0sIm5hbWVzIjpbImNvZGVzIiwiZ2V0U3RhdHVzTWVzc2FnZSIsImNvZGUiLCJPYmplY3QiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiLCJzdGF0dXMiLCJtZXNzYWdlIiwiRXJyb3IiLCJUeXBlRXJyb3IiLCJuIiwicGFyc2VJbnQiLCJpc05hTiIsIm1zZyIsInRvTG93ZXJDYXNlIiwiZ2V0U3RhdHVzQ29kZSIsIm1vZHVsZSIsImV4cG9ydHMiLCJtYXAiLCJrZXlzIiwiZm9yRWFjaCIsIk51bWJlciIsImNyZWF0ZU1lc3NhZ2VUb1N0YXR1c0NvZGVNYXAiLCJjcmVhdGVTdGF0dXNDb2RlTGlzdCIsInJlZGlyZWN0IiwiZW1wdHkiLCJyZXRyeSJdLCJzb3VyY2VSb290IjoiIn0=