"use strict";exports.id="mod-node_modules_body-parser_lib_read_js-35080990",exports.ids=["mod-node_modules_body-parser_lib_read_js-35080990"],exports.modules={"./node_modules/body-parser/lib/read.js":(e,n,t)=>{var o=t("./node_modules/http-errors/index.js"),d=t("./node_modules/destroy/index.js"),r=t("./node_modules/raw-body/index.js"),i=t("./node_modules/iconv-lite/lib/index.js"),s=t("./node_modules/on-finished/index.js"),u=t("./node_modules/unpipe/index.js"),p=t("zlib");e.exports=function(e,n,t,a,c,l){var y,g,h=l;e._body=!0;var b=null!==h.encoding?h.encoding:null,f=h.verify;try{g=function(e,n,t){var d,r=(e.headers["content-encoding"]||"identity").toLowerCase(),i=e.headers["content-length"];if(n('content-encoding "%s"',r),!1===t&&"identity"!==r)throw o(415,"content encoding unsupported",{encoding:r,type:"encoding.unsupported"});switch(r){case"deflate":d=p.createInflate(),n("inflate body"),e.pipe(d);break;case"gzip":d=p.createGunzip(),n("gunzip body"),e.pipe(d);break;case"identity":(d=e).length=i;break;default:throw o(415,'unsupported content encoding "'+r+'"',{encoding:r,type:"encoding.unsupported"})}return d}(e,c,h.inflate),y=g.length,g.length=void 0}catch(e){return t(e)}if(h.length=y,h.encoding=f?null:b,null===h.encoding&&null!==b&&!i.encodingExists(b))return t(o(415,'unsupported charset "'+b.toUpperCase()+'"',{charset:b.toLowerCase(),type:"charset.unsupported"}));c("read body"),r(g,h,(function(r,p){var l;if(r)return l="encoding.unsupported"===r.type?o(415,'unsupported charset "'+b.toUpperCase()+'"',{charset:b.toLowerCase(),type:"charset.unsupported"}):o(400,r),g!==e&&(u(e),d(g,!0)),void function(e,n){s.isFinished(e)?n(null):(s(e,n),e.resume())}(e,(function(){t(o(400,l))}));if(f)try{c("verify body"),f(e,n,p,b)}catch(e){return void t(o(403,e,{body:p,type:e.type||"entity.verify.failed"}))}var y=p;try{c("parse body"),y="string"!=typeof p&&null!==b?i.decode(p,b):p,e.body=a(y)}catch(e){return void t(o(400,e,{body:y,type:e.type||"entity.parse.failed"}))}t()}))}}};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,