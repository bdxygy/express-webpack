"use strict";exports.id="mod-node_modules_iconv-lite_lib_streams_js-270659c0",exports.ids=["mod-node_modules_iconv-lite_lib_streams_js-270659c0"],exports.modules={"./node_modules/iconv-lite/lib/streams.js":(t,e,o)=>{var n=o("buffer").Buffer,r=o("stream").Transform;function s(t,e){this.conv=t,(e=e||{}).decodeStrings=!1,r.call(this,e)}function c(t,e){this.conv=t,(e=e||{}).encoding=this.encoding="utf8",r.call(this,e)}t.exports=function(t){t.encodeStream=function(e,o){return new s(t.getEncoder(e,o),o)},t.decodeStream=function(e,o){return new c(t.getDecoder(e,o),o)},t.supportsStreams=!0,t.IconvLiteEncoderStream=s,t.IconvLiteDecoderStream=c,t._collect=c.prototype.collect},s.prototype=Object.create(r.prototype,{constructor:{value:s}}),s.prototype._transform=function(t,e,o){if("string"!=typeof t)return o(new Error("Iconv encoding stream needs strings as its input."));try{var n=this.conv.write(t);n&&n.length&&this.push(n),o()}catch(t){o(t)}},s.prototype._flush=function(t){try{var e=this.conv.end();e&&e.length&&this.push(e),t()}catch(e){t(e)}},s.prototype.collect=function(t){var e=[];return this.on("error",t),this.on("data",(function(t){e.push(t)})),this.on("end",(function(){t(null,n.concat(e))})),this},c.prototype=Object.create(r.prototype,{constructor:{value:c}}),c.prototype._transform=function(t,e,o){if(!n.isBuffer(t))return o(new Error("Iconv decoding stream needs buffers as its input."));try{var r=this.conv.write(t);r&&r.length&&this.push(r,this.encoding),o()}catch(t){o(t)}},c.prototype._flush=function(t){try{var e=this.conv.end();e&&e.length&&this.push(e,this.encoding),t()}catch(e){t(e)}},c.prototype.collect=function(t){var e="";return this.on("error",t),this.on("data",(function(t){e+=t})),this.on("end",(function(){t(null,e)})),this}}};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,