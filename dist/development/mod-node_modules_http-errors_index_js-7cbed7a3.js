"use strict";exports.id="mod-node_modules_http-errors_index_js-7cbed7a3",exports.ids=["mod-node_modules_http-errors_index_js-7cbed7a3"],exports.modules={"./node_modules/http-errors/index.js":(e,r,t)=>{var o,s=t("./node_modules/depd/index.js")("http-errors"),n=t("./node_modules/setprototypeof/index.js"),a=t("./node_modules/statuses/index.js"),u=t("./node_modules/inherits/inherits.js"),p=t("./node_modules/toidentifier/index.js");function i(e){return Number(String(e).charAt(0)+"00")}function c(e,r){var t=Object.getOwnPropertyDescriptor(e,"name");t&&t.configurable&&(t.value=r,Object.defineProperty(e,"name",t))}function d(e){return"Error"!==e.substr(-5)?e+"Error":e}e.exports=function e(){for(var r,t,o=500,n={},u=0;u<arguments.length;u++){var p=arguments[u],c=typeof p;if("object"===c&&p instanceof Error)o=(r=p).status||r.statusCode||o;else if("number"===c&&0===u)o=p;else if("string"===c)t=p;else{if("object"!==c)throw new TypeError("argument #"+(u+1)+" unsupported type "+c);n=p}}"number"==typeof o&&(o<400||o>=600)&&s("non-error status code; use only 4xx or 5xx status codes");("number"!=typeof o||!a.message[o]&&(o<400||o>=600))&&(o=500);var d=e[o]||e[i(o)];r||(r=d?new d(t):new Error(t||a.message[o]),Error.captureStackTrace(r,e));d&&r instanceof d&&r.status===o||(r.expose=o<500,r.status=r.statusCode=o);for(var f in n)"status"!==f&&"statusCode"!==f&&(r[f]=n[f]);return r},e.exports.HttpError=function(){function e(){throw new TypeError("cannot construct abstract class")}return u(e,Error),e}(),e.exports.isHttpError=(o=e.exports.HttpError,function(e){return!(!e||"object"!=typeof e)&&(e instanceof o||e instanceof Error&&"boolean"==typeof e.expose&&"number"==typeof e.statusCode&&e.status===e.statusCode)}),function(e,r,t){r.forEach((function(r){var o,s=p(a.message[r]);switch(i(r)){case 400:o=function(e,r,t){var o=d(r);function s(e){var r=null!=e?e:a.message[t],u=new Error(r);return Error.captureStackTrace(u,s),n(u,s.prototype),Object.defineProperty(u,"message",{enumerable:!0,configurable:!0,value:r,writable:!0}),Object.defineProperty(u,"name",{enumerable:!1,configurable:!0,value:o,writable:!0}),u}return u(s,e),c(s,o),s.prototype.status=t,s.prototype.statusCode=t,s.prototype.expose=!0,s}(t,s,r);break;case 500:o=function(e,r,t){var o=d(r);function s(e){var r=null!=e?e:a.message[t],u=new Error(r);return Error.captureStackTrace(u,s),n(u,s.prototype),Object.defineProperty(u,"message",{enumerable:!0,configurable:!0,value:r,writable:!0}),Object.defineProperty(u,"name",{enumerable:!1,configurable:!0,value:o,writable:!0}),u}return u(s,e),c(s,o),s.prototype.status=t,s.prototype.statusCode=t,s.prototype.expose=!1,s}(t,s,r)}o&&(e[r]=o,e[s]=o)}))}(e.exports,a.codes,e.exports.HttpError)}};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,