"use strict";exports.id="mod-node_modules_finalhandler_index_js-53379e82",exports.ids=["mod-node_modules_finalhandler_index_js-53379e82"],exports.modules={"./node_modules/finalhandler/index.js":(e,n,t)=>{var r=t("./node_modules/debug/src/index.js")("finalhandler"),o=t("./node_modules/encodeurl/index.js"),s=t("./node_modules/escape-html/index.js"),d=t("./node_modules/on-finished/index.js"),a=t("./node_modules/parseurl/index.js"),u=t("./node_modules/statuses/index.js"),i=t("./node_modules/unpipe/index.js"),f=/\x20{2}/g,l=/\n/g,c="function"==typeof setImmediate?setImmediate:function(e){process.nextTick(e.bind.apply(e,arguments))},m=d.isFinished;function h(e){return"boolean"!=typeof e.headersSent?Boolean(e._header):e.headersSent}e.exports=function(e,n,t){var p=t||{},y=p.env||"development",g=p.onerror;return function(t){var p,v,x;if(t||!h(n)){if(t?(x=function(e){if("number"==typeof e.status&&e.status>=400&&e.status<600)return e.status;if("number"==typeof e.statusCode&&e.statusCode>=400&&e.statusCode<600)return e.statusCode;return}(t),void 0===x?x=function(e){var n=e.statusCode;("number"!=typeof n||n<400||n>599)&&(n=500);return n}(n):p=function(e){if(!e.headers||"object"!=typeof e.headers)return;for(var n=Object.create(null),t=Object.keys(e.headers),r=0;r<t.length;r++){var o=t[r];n[o]=e.headers[o]}return n}(t),v=function(e,n,t){var r;"production"!==t&&((r=e.stack)||"function"!=typeof e.toString||(r=e.toString()));return r||u.message[n]}(t,x,y)):(x=404,v="Cannot "+e.method+" "+o(function(e){try{return a.original(e).pathname}catch(e){return"resource"}}(e))),r("default %s",x),t&&g&&c(g,t,e,n),h(n))return r("cannot %d after headers sent",x),void e.socket.destroy();!function(e,n,t,r,o){function a(){var d=function(e){return'<!DOCTYPE html>\n<html lang="en">\n<head>\n<meta charset="utf-8">\n<title>Error</title>\n</head>\n<body>\n<pre>'+s(e).replace(l,"<br>").replace(f," &nbsp;")+"</pre>\n</body>\n</html>\n"}(o);n.statusCode=t,n.statusMessage=u.message[t],n.removeHeader("Content-Encoding"),n.removeHeader("Content-Language"),n.removeHeader("Content-Range"),function(e,n){if(!n)return;for(var t=Object.keys(n),r=0;r<t.length;r++){var o=t[r];e.setHeader(o,n[o])}}(n,r),n.setHeader("Content-Security-Policy","default-src 'none'"),n.setHeader("X-Content-Type-Options","nosniff"),n.setHeader("Content-Type","text/html; charset=utf-8"),n.setHeader("Content-Length",Buffer.byteLength(d,"utf8")),"HEAD"!==e.method?n.end(d,"utf8"):n.end()}if(m(e))return void a();i(e),d(e,a),e.resume()}(e,n,x,p,v)}else r("cannot 404 after headers sent")}}}};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9kLW5vZGVfbW9kdWxlc19maW5hbGhhbmRsZXJfaW5kZXhfanMtNTMzNzllODIuanMiLCJtYXBwaW5ncyI6IjRNQWFBLElBQUlBLEVBQVEsRUFBUSxvQ0FBUixDQUFpQixnQkFDekJDLEVBQVksRUFBUSxxQ0FDcEJDLEVBQWEsRUFBUSx1Q0FDckJDLEVBQWEsRUFBUSx1Q0FDckJDLEVBQVcsRUFBUSxvQ0FDbkJDLEVBQVcsRUFBUSxvQ0FDbkJDLEVBQVMsRUFBUSxrQ0FPakJDLEVBQXNCLFdBQ3RCQyxFQUFpQixNQUdqQkMsRUFBZ0MsbUJBQWpCQyxhQUNmQSxhQUNBLFNBQVVDLEdBQU1DLFFBQVFDLFNBQVNGLEVBQUdHLEtBQUtDLE1BQU1KLEVBQUlLLFdBQVksRUFDL0RDLEVBQWFkLEVBQVdjLFdBNk41QixTQUFTQyxFQUFhQyxHQUNwQixNQUFrQyxrQkFBcEJBLEVBQUlELFlBQ2RFLFFBQVFELEVBQUlFLFNBQ1pGLEVBQUlELFdBQ1YsQ0FsTUFJLEVBQU9DLFFBWVAsU0FBdUJDLEVBQUtMLEVBQUtNLEdBQy9CLElBQUlDLEVBQU9ELEdBQVcsQ0FBQyxFQUduQkUsRUFBTUQsRUFBS0MsS0FBTyxjQUdsQkMsRUFBVUYsRUFBS0UsUUFFbkIsT0FBTyxTQUFVQyxHQUNmLElBQUlDLEVBQ0FDLEVBQ0FDLEVBR0osR0FBS0gsSUFBT1gsRUFBWUMsR0FBeEIsQ0FrQ0EsR0E1QklVLEdBRUZHLEVBK0ZOLFNBQTZCSCxHQUUzQixHQUEwQixpQkFBZkEsRUFBSUcsUUFBdUJILEVBQUlHLFFBQVUsS0FBT0gsRUFBSUcsT0FBUyxJQUN0RSxPQUFPSCxFQUFJRyxPQUliLEdBQThCLGlCQUFuQkgsRUFBSUksWUFBMkJKLEVBQUlJLFlBQWMsS0FBT0osRUFBSUksV0FBYSxJQUNsRixPQUFPSixFQUFJSSxXQUdiLE1BQ0YsQ0EzR2VDLENBQW1CTCxRQUViTSxJQUFYSCxFQUVGQSxFQW9JUixTQUFnQ2IsR0FDOUIsSUFBSWEsRUFBU2IsRUFBSWMsWUFHSyxpQkFBWEQsR0FBdUJBLEVBQVMsS0FBT0EsRUFBUyxPQUN6REEsRUFBUyxLQUdYLE9BQU9BLENBQ1QsQ0E3SWlCSSxDQUFzQmpCLEdBRy9CVyxFQXNDUixTQUEwQkQsR0FDeEIsSUFBS0EsRUFBSUMsU0FBa0MsaUJBQWhCRCxFQUFJQyxRQUM3QixPQU1GLElBSEEsSUFBSUEsRUFBVU8sT0FBT0MsT0FBTyxNQUN4QkMsRUFBT0YsT0FBT0UsS0FBS1YsRUFBSUMsU0FFbEJVLEVBQUksRUFBR0EsRUFBSUQsRUFBS0UsT0FBUUQsSUFBSyxDQUNwQyxJQUFJRSxFQUFNSCxFQUFLQyxHQUNmVixFQUFRWSxHQUFPYixFQUFJQyxRQUFRWSxFQUM3QixDQUVBLE9BQU9aLENBQ1QsQ0FwRGtCYSxDQUFnQmQsR0FJNUJFLEVBNEROLFNBQTBCRixFQUFLRyxFQUFRTCxHQUNyQyxJQUFJSSxFQUVRLGVBQVJKLEtBRUZJLEVBQU1GLEVBQUllLFFBRzBCLG1CQUFqQmYsRUFBSWdCLFdBQ3JCZCxFQUFNRixFQUFJZ0IsYUFJZCxPQUFPZCxHQUFPMUIsRUFBU3lDLFFBQVFkLEVBQ2pDLENBMUVZZSxDQUFnQmxCLEVBQUtHLEVBQVFMLEtBR25DSyxFQUFTLElBQ1RELEVBQU0sVUFBWVAsRUFBSXdCLE9BQVMsSUFBTS9DLEVBeUczQyxTQUEwQnVCLEdBQ3hCLElBQ0UsT0FBT3BCLEVBQVM2QyxTQUFTekIsR0FBSzBCLFFBQ2hDLENBQUUsTUFBT0MsR0FDUCxNQUFPLFVBQ1QsQ0FDRixDQS9HcURDLENBQWdCNUIsS0FHakV4QixFQUFNLGFBQWNnQyxHQUdoQkgsR0FBT0QsR0FDVG5CLEVBQU1tQixFQUFTQyxFQUFLTCxFQUFLTCxHQUl2QkQsRUFBWUMsR0FHZCxPQUZBbkIsRUFBTSwrQkFBZ0NnQyxRQUN0Q1IsRUFBSTZCLE9BQU9DLFdBZ0pqQixTQUFlOUIsRUFBS0wsRUFBS2EsRUFBUUYsRUFBU2dCLEdBQ3hDLFNBQVNTLElBRVAsSUFBSUMsRUF4T1IsU0FBNkJWLEdBSzNCLE1BQU8sa0hBSkk1QyxFQUFXNEMsR0FDbkJXLFFBQVFqRCxFQUFnQixRQUN4QmlELFFBQVFsRCxFQUFxQixXQUV6Qiw0QkFVVCxDQXlOZW1ELENBQW1CWixHQUc5QjNCLEVBQUljLFdBQWFELEVBQ2pCYixFQUFJd0MsY0FBZ0J0RCxFQUFTeUMsUUFBUWQsR0FHckNiLEVBQUl5QyxhQUFhLG9CQUNqQnpDLEVBQUl5QyxhQUFhLG9CQUNqQnpDLEVBQUl5QyxhQUFhLGlCQTBDckIsU0FBcUJ6QyxFQUFLVyxHQUN4QixJQUFLQSxFQUNILE9BSUYsSUFEQSxJQUFJUyxFQUFPRixPQUFPRSxLQUFLVCxHQUNkVSxFQUFJLEVBQUdBLEVBQUlELEVBQUtFLE9BQVFELElBQUssQ0FDcEMsSUFBSUUsRUFBTUgsRUFBS0MsR0FDZnJCLEVBQUkwQyxVQUFVbkIsRUFBS1osRUFBUVksR0FDN0IsQ0FDRixDQWpESW9CLENBQVczQyxFQUFLVyxHQUdoQlgsRUFBSTBDLFVBQVUsMEJBQTJCLHNCQUN6QzFDLEVBQUkwQyxVQUFVLHlCQUEwQixXQUd4QzFDLEVBQUkwQyxVQUFVLGVBQWdCLDRCQUM5QjFDLEVBQUkwQyxVQUFVLGlCQUFrQkUsT0FBT0MsV0FBV1IsRUFBTSxTQUVyQyxTQUFmaEMsRUFBSXdCLE9BS1I3QixFQUFJOEMsSUFBSVQsRUFBTSxRQUpackMsRUFBSThDLEtBS1IsQ0FFQSxHQUFJaEQsRUFBV08sR0FFYixZQURBK0IsSUFLRmpELEVBQU9rQixHQUdQckIsRUFBV3FCLEVBQUsrQixHQUNoQi9CLEVBQUkwQyxRQUNOLENBdkxJQyxDQUFLM0MsRUFBS0wsRUFBS2EsRUFBUUYsRUFBU0MsRUF0Q2hDLE1BRkUvQixFQUFNLGdDQXlDVixDQUNGLEMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AYmR4eWd5L2V4cHJlc3Mtd2VicGFjay8uL25vZGVfbW9kdWxlcy9maW5hbGhhbmRsZXIvaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiLyohXG4gKiBmaW5hbGhhbmRsZXJcbiAqIENvcHlyaWdodChjKSAyMDE0LTIwMjIgRG91Z2xhcyBDaHJpc3RvcGhlciBXaWxzb25cbiAqIE1JVCBMaWNlbnNlZFxuICovXG5cbid1c2Ugc3RyaWN0J1xuXG4vKipcbiAqIE1vZHVsZSBkZXBlbmRlbmNpZXMuXG4gKiBAcHJpdmF0ZVxuICovXG5cbnZhciBkZWJ1ZyA9IHJlcXVpcmUoJ2RlYnVnJykoJ2ZpbmFsaGFuZGxlcicpXG52YXIgZW5jb2RlVXJsID0gcmVxdWlyZSgnZW5jb2RldXJsJylcbnZhciBlc2NhcGVIdG1sID0gcmVxdWlyZSgnZXNjYXBlLWh0bWwnKVxudmFyIG9uRmluaXNoZWQgPSByZXF1aXJlKCdvbi1maW5pc2hlZCcpXG52YXIgcGFyc2VVcmwgPSByZXF1aXJlKCdwYXJzZXVybCcpXG52YXIgc3RhdHVzZXMgPSByZXF1aXJlKCdzdGF0dXNlcycpXG52YXIgdW5waXBlID0gcmVxdWlyZSgndW5waXBlJylcblxuLyoqXG4gKiBNb2R1bGUgdmFyaWFibGVzLlxuICogQHByaXZhdGVcbiAqL1xuXG52YXIgRE9VQkxFX1NQQUNFX1JFR0VYUCA9IC9cXHgyMHsyfS9nXG52YXIgTkVXTElORV9SRUdFWFAgPSAvXFxuL2dcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgKi9cbnZhciBkZWZlciA9IHR5cGVvZiBzZXRJbW1lZGlhdGUgPT09ICdmdW5jdGlvbidcbiAgPyBzZXRJbW1lZGlhdGVcbiAgOiBmdW5jdGlvbiAoZm4pIHsgcHJvY2Vzcy5uZXh0VGljayhmbi5iaW5kLmFwcGx5KGZuLCBhcmd1bWVudHMpKSB9XG52YXIgaXNGaW5pc2hlZCA9IG9uRmluaXNoZWQuaXNGaW5pc2hlZFxuXG4vKipcbiAqIENyZWF0ZSBhIG1pbmltYWwgSFRNTCBkb2N1bWVudC5cbiAqXG4gKiBAcGFyYW0ge3N0cmluZ30gbWVzc2FnZVxuICogQHByaXZhdGVcbiAqL1xuXG5mdW5jdGlvbiBjcmVhdGVIdG1sRG9jdW1lbnQgKG1lc3NhZ2UpIHtcbiAgdmFyIGJvZHkgPSBlc2NhcGVIdG1sKG1lc3NhZ2UpXG4gICAgLnJlcGxhY2UoTkVXTElORV9SRUdFWFAsICc8YnI+JylcbiAgICAucmVwbGFjZShET1VCTEVfU1BBQ0VfUkVHRVhQLCAnICZuYnNwOycpXG5cbiAgcmV0dXJuICc8IURPQ1RZUEUgaHRtbD5cXG4nICtcbiAgICAnPGh0bWwgbGFuZz1cImVuXCI+XFxuJyArXG4gICAgJzxoZWFkPlxcbicgK1xuICAgICc8bWV0YSBjaGFyc2V0PVwidXRmLThcIj5cXG4nICtcbiAgICAnPHRpdGxlPkVycm9yPC90aXRsZT5cXG4nICtcbiAgICAnPC9oZWFkPlxcbicgK1xuICAgICc8Ym9keT5cXG4nICtcbiAgICAnPHByZT4nICsgYm9keSArICc8L3ByZT5cXG4nICtcbiAgICAnPC9ib2R5PlxcbicgK1xuICAgICc8L2h0bWw+XFxuJ1xufVxuXG4vKipcbiAqIE1vZHVsZSBleHBvcnRzLlxuICogQHB1YmxpY1xuICovXG5cbm1vZHVsZS5leHBvcnRzID0gZmluYWxoYW5kbGVyXG5cbi8qKlxuICogQ3JlYXRlIGEgZnVuY3Rpb24gdG8gaGFuZGxlIHRoZSBmaW5hbCByZXNwb25zZS5cbiAqXG4gKiBAcGFyYW0ge1JlcXVlc3R9IHJlcVxuICogQHBhcmFtIHtSZXNwb25zZX0gcmVzXG4gKiBAcGFyYW0ge09iamVjdH0gW29wdGlvbnNdXG4gKiBAcmV0dXJuIHtGdW5jdGlvbn1cbiAqIEBwdWJsaWNcbiAqL1xuXG5mdW5jdGlvbiBmaW5hbGhhbmRsZXIgKHJlcSwgcmVzLCBvcHRpb25zKSB7XG4gIHZhciBvcHRzID0gb3B0aW9ucyB8fCB7fVxuXG4gIC8vIGdldCBlbnZpcm9ubWVudFxuICB2YXIgZW52ID0gb3B0cy5lbnYgfHwgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgfHwgJ2RldmVsb3BtZW50J1xuXG4gIC8vIGdldCBlcnJvciBjYWxsYmFja1xuICB2YXIgb25lcnJvciA9IG9wdHMub25lcnJvclxuXG4gIHJldHVybiBmdW5jdGlvbiAoZXJyKSB7XG4gICAgdmFyIGhlYWRlcnNcbiAgICB2YXIgbXNnXG4gICAgdmFyIHN0YXR1c1xuXG4gICAgLy8gaWdub3JlIDQwNCBvbiBpbi1mbGlnaHQgcmVzcG9uc2VcbiAgICBpZiAoIWVyciAmJiBoZWFkZXJzU2VudChyZXMpKSB7XG4gICAgICBkZWJ1ZygnY2Fubm90IDQwNCBhZnRlciBoZWFkZXJzIHNlbnQnKVxuICAgICAgcmV0dXJuXG4gICAgfVxuXG4gICAgLy8gdW5oYW5kbGVkIGVycm9yXG4gICAgaWYgKGVycikge1xuICAgICAgLy8gcmVzcGVjdCBzdGF0dXMgY29kZSBmcm9tIGVycm9yXG4gICAgICBzdGF0dXMgPSBnZXRFcnJvclN0YXR1c0NvZGUoZXJyKVxuXG4gICAgICBpZiAoc3RhdHVzID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgLy8gZmFsbGJhY2sgdG8gc3RhdHVzIGNvZGUgb24gcmVzcG9uc2VcbiAgICAgICAgc3RhdHVzID0gZ2V0UmVzcG9uc2VTdGF0dXNDb2RlKHJlcylcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIC8vIHJlc3BlY3QgaGVhZGVycyBmcm9tIGVycm9yXG4gICAgICAgIGhlYWRlcnMgPSBnZXRFcnJvckhlYWRlcnMoZXJyKVxuICAgICAgfVxuXG4gICAgICAvLyBnZXQgZXJyb3IgbWVzc2FnZVxuICAgICAgbXNnID0gZ2V0RXJyb3JNZXNzYWdlKGVyciwgc3RhdHVzLCBlbnYpXG4gICAgfSBlbHNlIHtcbiAgICAgIC8vIG5vdCBmb3VuZFxuICAgICAgc3RhdHVzID0gNDA0XG4gICAgICBtc2cgPSAnQ2Fubm90ICcgKyByZXEubWV0aG9kICsgJyAnICsgZW5jb2RlVXJsKGdldFJlc291cmNlTmFtZShyZXEpKVxuICAgIH1cblxuICAgIGRlYnVnKCdkZWZhdWx0ICVzJywgc3RhdHVzKVxuXG4gICAgLy8gc2NoZWR1bGUgb25lcnJvciBjYWxsYmFja1xuICAgIGlmIChlcnIgJiYgb25lcnJvcikge1xuICAgICAgZGVmZXIob25lcnJvciwgZXJyLCByZXEsIHJlcylcbiAgICB9XG5cbiAgICAvLyBjYW5ub3QgYWN0dWFsbHkgcmVzcG9uZFxuICAgIGlmIChoZWFkZXJzU2VudChyZXMpKSB7XG4gICAgICBkZWJ1ZygnY2Fubm90ICVkIGFmdGVyIGhlYWRlcnMgc2VudCcsIHN0YXR1cylcbiAgICAgIHJlcS5zb2NrZXQuZGVzdHJveSgpXG4gICAgICByZXR1cm5cbiAgICB9XG5cbiAgICAvLyBzZW5kIHJlc3BvbnNlXG4gICAgc2VuZChyZXEsIHJlcywgc3RhdHVzLCBoZWFkZXJzLCBtc2cpXG4gIH1cbn1cblxuLyoqXG4gKiBHZXQgaGVhZGVycyBmcm9tIEVycm9yIG9iamVjdC5cbiAqXG4gKiBAcGFyYW0ge0Vycm9yfSBlcnJcbiAqIEByZXR1cm4ge29iamVjdH1cbiAqIEBwcml2YXRlXG4gKi9cblxuZnVuY3Rpb24gZ2V0RXJyb3JIZWFkZXJzIChlcnIpIHtcbiAgaWYgKCFlcnIuaGVhZGVycyB8fCB0eXBlb2YgZXJyLmhlYWRlcnMgIT09ICdvYmplY3QnKSB7XG4gICAgcmV0dXJuIHVuZGVmaW5lZFxuICB9XG5cbiAgdmFyIGhlYWRlcnMgPSBPYmplY3QuY3JlYXRlKG51bGwpXG4gIHZhciBrZXlzID0gT2JqZWN0LmtleXMoZXJyLmhlYWRlcnMpXG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBrZXlzLmxlbmd0aDsgaSsrKSB7XG4gICAgdmFyIGtleSA9IGtleXNbaV1cbiAgICBoZWFkZXJzW2tleV0gPSBlcnIuaGVhZGVyc1trZXldXG4gIH1cblxuICByZXR1cm4gaGVhZGVyc1xufVxuXG4vKipcbiAqIEdldCBtZXNzYWdlIGZyb20gRXJyb3Igb2JqZWN0LCBmYWxsYmFjayB0byBzdGF0dXMgbWVzc2FnZS5cbiAqXG4gKiBAcGFyYW0ge0Vycm9yfSBlcnJcbiAqIEBwYXJhbSB7bnVtYmVyfSBzdGF0dXNcbiAqIEBwYXJhbSB7c3RyaW5nfSBlbnZcbiAqIEByZXR1cm4ge3N0cmluZ31cbiAqIEBwcml2YXRlXG4gKi9cblxuZnVuY3Rpb24gZ2V0RXJyb3JNZXNzYWdlIChlcnIsIHN0YXR1cywgZW52KSB7XG4gIHZhciBtc2dcblxuICBpZiAoZW52ICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICAvLyB1c2UgZXJyLnN0YWNrLCB3aGljaCB0eXBpY2FsbHkgaW5jbHVkZXMgZXJyLm1lc3NhZ2VcbiAgICBtc2cgPSBlcnIuc3RhY2tcblxuICAgIC8vIGZhbGxiYWNrIHRvIGVyci50b1N0cmluZygpIHdoZW4gcG9zc2libGVcbiAgICBpZiAoIW1zZyAmJiB0eXBlb2YgZXJyLnRvU3RyaW5nID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICBtc2cgPSBlcnIudG9TdHJpbmcoKVxuICAgIH1cbiAgfVxuXG4gIHJldHVybiBtc2cgfHwgc3RhdHVzZXMubWVzc2FnZVtzdGF0dXNdXG59XG5cbi8qKlxuICogR2V0IHN0YXR1cyBjb2RlIGZyb20gRXJyb3Igb2JqZWN0LlxuICpcbiAqIEBwYXJhbSB7RXJyb3J9IGVyclxuICogQHJldHVybiB7bnVtYmVyfVxuICogQHByaXZhdGVcbiAqL1xuXG5mdW5jdGlvbiBnZXRFcnJvclN0YXR1c0NvZGUgKGVycikge1xuICAvLyBjaGVjayBlcnIuc3RhdHVzXG4gIGlmICh0eXBlb2YgZXJyLnN0YXR1cyA9PT0gJ251bWJlcicgJiYgZXJyLnN0YXR1cyA+PSA0MDAgJiYgZXJyLnN0YXR1cyA8IDYwMCkge1xuICAgIHJldHVybiBlcnIuc3RhdHVzXG4gIH1cblxuICAvLyBjaGVjayBlcnIuc3RhdHVzQ29kZVxuICBpZiAodHlwZW9mIGVyci5zdGF0dXNDb2RlID09PSAnbnVtYmVyJyAmJiBlcnIuc3RhdHVzQ29kZSA+PSA0MDAgJiYgZXJyLnN0YXR1c0NvZGUgPCA2MDApIHtcbiAgICByZXR1cm4gZXJyLnN0YXR1c0NvZGVcbiAgfVxuXG4gIHJldHVybiB1bmRlZmluZWRcbn1cblxuLyoqXG4gKiBHZXQgcmVzb3VyY2UgbmFtZSBmb3IgdGhlIHJlcXVlc3QuXG4gKlxuICogVGhpcyBpcyB0eXBpY2FsbHkganVzdCB0aGUgb3JpZ2luYWwgcGF0aG5hbWUgb2YgdGhlIHJlcXVlc3RcbiAqIGJ1dCB3aWxsIGZhbGxiYWNrIHRvIFwicmVzb3VyY2VcIiBpcyB0aGF0IGNhbm5vdCBiZSBkZXRlcm1pbmVkLlxuICpcbiAqIEBwYXJhbSB7SW5jb21pbmdNZXNzYWdlfSByZXFcbiAqIEByZXR1cm4ge3N0cmluZ31cbiAqIEBwcml2YXRlXG4gKi9cblxuZnVuY3Rpb24gZ2V0UmVzb3VyY2VOYW1lIChyZXEpIHtcbiAgdHJ5IHtcbiAgICByZXR1cm4gcGFyc2VVcmwub3JpZ2luYWwocmVxKS5wYXRobmFtZVxuICB9IGNhdGNoIChlKSB7XG4gICAgcmV0dXJuICdyZXNvdXJjZSdcbiAgfVxufVxuXG4vKipcbiAqIEdldCBzdGF0dXMgY29kZSBmcm9tIHJlc3BvbnNlLlxuICpcbiAqIEBwYXJhbSB7T3V0Z29pbmdNZXNzYWdlfSByZXNcbiAqIEByZXR1cm4ge251bWJlcn1cbiAqIEBwcml2YXRlXG4gKi9cblxuZnVuY3Rpb24gZ2V0UmVzcG9uc2VTdGF0dXNDb2RlIChyZXMpIHtcbiAgdmFyIHN0YXR1cyA9IHJlcy5zdGF0dXNDb2RlXG5cbiAgLy8gZGVmYXVsdCBzdGF0dXMgY29kZSB0byA1MDAgaWYgb3V0c2lkZSB2YWxpZCByYW5nZVxuICBpZiAodHlwZW9mIHN0YXR1cyAhPT0gJ251bWJlcicgfHwgc3RhdHVzIDwgNDAwIHx8IHN0YXR1cyA+IDU5OSkge1xuICAgIHN0YXR1cyA9IDUwMFxuICB9XG5cbiAgcmV0dXJuIHN0YXR1c1xufVxuXG4vKipcbiAqIERldGVybWluZSBpZiB0aGUgcmVzcG9uc2UgaGVhZGVycyBoYXZlIGJlZW4gc2VudC5cbiAqXG4gKiBAcGFyYW0ge29iamVjdH0gcmVzXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn1cbiAqIEBwcml2YXRlXG4gKi9cblxuZnVuY3Rpb24gaGVhZGVyc1NlbnQgKHJlcykge1xuICByZXR1cm4gdHlwZW9mIHJlcy5oZWFkZXJzU2VudCAhPT0gJ2Jvb2xlYW4nXG4gICAgPyBCb29sZWFuKHJlcy5faGVhZGVyKVxuICAgIDogcmVzLmhlYWRlcnNTZW50XG59XG5cbi8qKlxuICogU2VuZCByZXNwb25zZS5cbiAqXG4gKiBAcGFyYW0ge0luY29taW5nTWVzc2FnZX0gcmVxXG4gKiBAcGFyYW0ge091dGdvaW5nTWVzc2FnZX0gcmVzXG4gKiBAcGFyYW0ge251bWJlcn0gc3RhdHVzXG4gKiBAcGFyYW0ge29iamVjdH0gaGVhZGVyc1xuICogQHBhcmFtIHtzdHJpbmd9IG1lc3NhZ2VcbiAqIEBwcml2YXRlXG4gKi9cblxuZnVuY3Rpb24gc2VuZCAocmVxLCByZXMsIHN0YXR1cywgaGVhZGVycywgbWVzc2FnZSkge1xuICBmdW5jdGlvbiB3cml0ZSAoKSB7XG4gICAgLy8gcmVzcG9uc2UgYm9keVxuICAgIHZhciBib2R5ID0gY3JlYXRlSHRtbERvY3VtZW50KG1lc3NhZ2UpXG5cbiAgICAvLyByZXNwb25zZSBzdGF0dXNcbiAgICByZXMuc3RhdHVzQ29kZSA9IHN0YXR1c1xuICAgIHJlcy5zdGF0dXNNZXNzYWdlID0gc3RhdHVzZXMubWVzc2FnZVtzdGF0dXNdXG5cbiAgICAvLyByZW1vdmUgYW55IGNvbnRlbnQgaGVhZGVyc1xuICAgIHJlcy5yZW1vdmVIZWFkZXIoJ0NvbnRlbnQtRW5jb2RpbmcnKVxuICAgIHJlcy5yZW1vdmVIZWFkZXIoJ0NvbnRlbnQtTGFuZ3VhZ2UnKVxuICAgIHJlcy5yZW1vdmVIZWFkZXIoJ0NvbnRlbnQtUmFuZ2UnKVxuXG4gICAgLy8gcmVzcG9uc2UgaGVhZGVyc1xuICAgIHNldEhlYWRlcnMocmVzLCBoZWFkZXJzKVxuXG4gICAgLy8gc2VjdXJpdHkgaGVhZGVyc1xuICAgIHJlcy5zZXRIZWFkZXIoJ0NvbnRlbnQtU2VjdXJpdHktUG9saWN5JywgXCJkZWZhdWx0LXNyYyAnbm9uZSdcIilcbiAgICByZXMuc2V0SGVhZGVyKCdYLUNvbnRlbnQtVHlwZS1PcHRpb25zJywgJ25vc25pZmYnKVxuXG4gICAgLy8gc3RhbmRhcmQgaGVhZGVyc1xuICAgIHJlcy5zZXRIZWFkZXIoJ0NvbnRlbnQtVHlwZScsICd0ZXh0L2h0bWw7IGNoYXJzZXQ9dXRmLTgnKVxuICAgIHJlcy5zZXRIZWFkZXIoJ0NvbnRlbnQtTGVuZ3RoJywgQnVmZmVyLmJ5dGVMZW5ndGgoYm9keSwgJ3V0ZjgnKSlcblxuICAgIGlmIChyZXEubWV0aG9kID09PSAnSEVBRCcpIHtcbiAgICAgIHJlcy5lbmQoKVxuICAgICAgcmV0dXJuXG4gICAgfVxuXG4gICAgcmVzLmVuZChib2R5LCAndXRmOCcpXG4gIH1cblxuICBpZiAoaXNGaW5pc2hlZChyZXEpKSB7XG4gICAgd3JpdGUoKVxuICAgIHJldHVyblxuICB9XG5cbiAgLy8gdW5waXBlIGV2ZXJ5dGhpbmcgZnJvbSB0aGUgcmVxdWVzdFxuICB1bnBpcGUocmVxKVxuXG4gIC8vIGZsdXNoIHRoZSByZXF1ZXN0XG4gIG9uRmluaXNoZWQocmVxLCB3cml0ZSlcbiAgcmVxLnJlc3VtZSgpXG59XG5cbi8qKlxuICogU2V0IHJlc3BvbnNlIGhlYWRlcnMgZnJvbSBhbiBvYmplY3QuXG4gKlxuICogQHBhcmFtIHtPdXRnb2luZ01lc3NhZ2V9IHJlc1xuICogQHBhcmFtIHtvYmplY3R9IGhlYWRlcnNcbiAqIEBwcml2YXRlXG4gKi9cblxuZnVuY3Rpb24gc2V0SGVhZGVycyAocmVzLCBoZWFkZXJzKSB7XG4gIGlmICghaGVhZGVycykge1xuICAgIHJldHVyblxuICB9XG5cbiAgdmFyIGtleXMgPSBPYmplY3Qua2V5cyhoZWFkZXJzKVxuICBmb3IgKHZhciBpID0gMDsgaSA8IGtleXMubGVuZ3RoOyBpKyspIHtcbiAgICB2YXIga2V5ID0ga2V5c1tpXVxuICAgIHJlcy5zZXRIZWFkZXIoa2V5LCBoZWFkZXJzW2tleV0pXG4gIH1cbn1cbiJdLCJuYW1lcyI6WyJkZWJ1ZyIsImVuY29kZVVybCIsImVzY2FwZUh0bWwiLCJvbkZpbmlzaGVkIiwicGFyc2VVcmwiLCJzdGF0dXNlcyIsInVucGlwZSIsIkRPVUJMRV9TUEFDRV9SRUdFWFAiLCJORVdMSU5FX1JFR0VYUCIsImRlZmVyIiwic2V0SW1tZWRpYXRlIiwiZm4iLCJwcm9jZXNzIiwibmV4dFRpY2siLCJiaW5kIiwiYXBwbHkiLCJhcmd1bWVudHMiLCJpc0ZpbmlzaGVkIiwiaGVhZGVyc1NlbnQiLCJyZXMiLCJCb29sZWFuIiwiX2hlYWRlciIsIm1vZHVsZSIsImV4cG9ydHMiLCJyZXEiLCJvcHRpb25zIiwib3B0cyIsImVudiIsIm9uZXJyb3IiLCJlcnIiLCJoZWFkZXJzIiwibXNnIiwic3RhdHVzIiwic3RhdHVzQ29kZSIsImdldEVycm9yU3RhdHVzQ29kZSIsInVuZGVmaW5lZCIsImdldFJlc3BvbnNlU3RhdHVzQ29kZSIsIk9iamVjdCIsImNyZWF0ZSIsImtleXMiLCJpIiwibGVuZ3RoIiwia2V5IiwiZ2V0RXJyb3JIZWFkZXJzIiwic3RhY2siLCJ0b1N0cmluZyIsIm1lc3NhZ2UiLCJnZXRFcnJvck1lc3NhZ2UiLCJtZXRob2QiLCJvcmlnaW5hbCIsInBhdGhuYW1lIiwiZSIsImdldFJlc291cmNlTmFtZSIsInNvY2tldCIsImRlc3Ryb3kiLCJ3cml0ZSIsImJvZHkiLCJyZXBsYWNlIiwiY3JlYXRlSHRtbERvY3VtZW50Iiwic3RhdHVzTWVzc2FnZSIsInJlbW92ZUhlYWRlciIsInNldEhlYWRlciIsInNldEhlYWRlcnMiLCJCdWZmZXIiLCJieXRlTGVuZ3RoIiwiZW5kIiwicmVzdW1lIiwic2VuZCJdLCJzb3VyY2VSb290IjoiIn0=